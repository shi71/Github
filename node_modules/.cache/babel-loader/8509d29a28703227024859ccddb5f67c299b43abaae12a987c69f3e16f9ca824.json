{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiju\\\\Desktop\\\\Class\\\\Styling_React\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Task from \"./Task\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { Card, ListGroup } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  tasks\n}) => {\n  _s();\n  const tasksEl = [];\n\n  // Don't change the state in the same scope as the return!!!\n  //setTasks([...tasks, 'Task 4']);\n\n  React.useEffect(() => {\n    console.log('useEffect called');\n    const resizeCallback = () => {\n      console.log('resized');\n    };\n\n    // DONT DO THIS!\n    //window.onresize = resizeCallback;\n\n    // DO THIS!!!\n    window.addEventListener('resize', resizeCallback);\n    const timer = setInterval(() => {\n      //alert('5 secs later');\n    }, 5000);\n\n    // Cleanup function\n    // Not always needed\n    return () => {\n      console.log('unmounted');\n      clearInterval(timer);\n      window.removeEventListener('resize', resizeCallback);\n    };\n  }, [tasks]);\n  for (let i = 0; i < tasks.length; i++) {\n    const task = tasks[i];\n    const taskEl = /*#__PURE__*/_jsxDEV(Task, {\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }, this);\n    tasksEl.push(taskEl);\n  }\n  return (\n    /*#__PURE__*/\n    // Grid System to Structure with single column and a row \n    // Card listing tasks \n    // Listgroup& Items\n    _jsxDEV(Card, {\n      style: {\n        width: 'rem',\n        margin: '0px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"text-uppercase\",\n        style: {\n          color: 'blue'\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  style: {\n                    color: 'Brown',\n                    textAlign: 'justify'\n                  },\n                  children: [\"Number Task Added :\" + tasks.length, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 5\n                }, this), tasksEl]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  );\n  ;\n};\n_s(TodoList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","Task","Container","Row","Col","Card","ListGroup","jsxDEV","_jsxDEV","TodoList","tasks","_s","tasksEl","useEffect","console","log","resizeCallback","window","addEventListener","timer","setInterval","clearInterval","removeEventListener","i","length","task","taskEl","children","fileName","_jsxFileName","lineNumber","columnNumber","push","style","width","margin","className","color","xs","md","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/shiju/Desktop/Class/Styling_React/src/components/TodoList.js"],"sourcesContent":["import React from \"react\";\nimport Task from \"./Task\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { Card, ListGroup} from 'reactstrap';\n\nconst TodoList = ({ tasks }) => {\n  const tasksEl = [];\n\n  // Don't change the state in the same scope as the return!!!\n  //setTasks([...tasks, 'Task 4']);\n\n  React.useEffect(() => {\n    console.log('useEffect called');\n\n    const resizeCallback = () => {\n      console.log('resized');\n    }; \n\n    // DONT DO THIS!\n    //window.onresize = resizeCallback;\n\n    // DO THIS!!!\n    window.addEventListener('resize', resizeCallback);\n\n    const timer = setInterval(() => {\n      //alert('5 secs later');\n    }, 5000);\n\n    // Cleanup function\n    // Not always needed\n    return () => {\n      console.log('unmounted');\n      clearInterval(timer);\n      window.removeEventListener('resize', resizeCallback);\n    }\n  }, [tasks]);\n\n  for (let i = 0; i < tasks.length; i++) {\n    const task = tasks[i];\n\n    const taskEl = <Task>{task}</Task>;\n\n    tasksEl.push(taskEl);\n  }\n\n  return (\n    // Grid System to Structure with single column and a row \n    // Card listing tasks \n    // Listgroup& Items\n  \n      <Card style={{ width: 'rem', margin: '0px' }}>\n    \n    <Container className=\"text-uppercase\" style={{ color: 'blue' }}>\n      <Row>\n        <Col xs={12} md={6}>\n  <ListGroup><ul>\n    \n    <h6 style={{color:'Brown', textAlign:'justify'}}>{\"Number Task Added :\" + tasks.length} </h6>{tasksEl }\n   \n    </ul></ListGroup>\n        </Col>\n      </Row>\n    </Container>\n </Card>\n    );\n    ;\n};\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}