{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiju\\\\Desktop\\\\Class\\\\Styling_React\\\\src\\\\components\\\\Task.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Badge, Alert } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Task = props => {\n  _s();\n  const {\n    children\n  } = props;\n  const [completed, setCompleted] = React.useState(false);\n  const onCompletedChanged = event => {\n    //console.log(event);\n\n    const isChecked = event.target.checked;\n    setCompleted(isChecked);\n  };\n  console.log(completed);\n  const taskStyle = {\n    textDecoration: completed ? 'line-through' : 'none'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: taskStyle,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n        color: \"primary\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"completed\",\n          onChange: onCompletedChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"custom-alert\",\n          variant: \"sucess\",\n          style: {\n            color: 'green',\n            padding: '5px ',\n            fontSize: '12px',\n            width: '0px',\n            height: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"alert-heading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 26\n          }, this), \"  Well done!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Task, \"c07B04XrQb2JE6oJ0LGVIYAwq3o=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","Badge","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","Task","props","_s","children","completed","setCompleted","useState","onCompletedChanged","event","isChecked","target","checked","console","log","taskStyle","textDecoration","style","fileName","_jsxFileName","lineNumber","columnNumber","color","type","name","onChange","className","variant","padding","fontSize","width","height","_c","$RefreshReg$"],"sources":["C:/Users/shiju/Desktop/Class/Styling_React/src/components/Task.js"],"sourcesContent":["import React from 'react';\nimport {Badge,Alert } from 'reactstrap';\n\nconst Task = (props) => {\n    const { children } = props;\n\n    const [completed, setCompleted] = React.useState(false);\n\n    const onCompletedChanged = (event) => {\n        //console.log(event);\n\n        const isChecked = event.target.checked;\n\n        setCompleted(isChecked);\n    };\n\n    console.log(completed);\n\n    const taskStyle = {\n        textDecoration: completed ? 'line-through' : 'none'\n    }\n\n    return (\n        <>\n\n            <li>\n                <span style={taskStyle}>{children}</span>\n             <Badge color=\"primary\">\n                <input type='checkbox' name='completed' onChange={onCompletedChanged} />\n                <Alert className=\"custom-alert\" variant=\"sucess\"style={{ color: 'green', padding: '5px ',fontSize: '12px', width: '0px', height: '10px'}}>\n                    <h6 className=\"alert-heading\"></h6>\n                         <br></br>  Well done!\n                         \n                  </Alert>\n                \n                </Badge>\n            </li> \n        </>\n    );\n}\n\nexport default Task;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,EAACC,KAAK,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAS,CAAC,GAAGF,KAAK;EAE1B,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IAClC;;IAEA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,OAAO;IAEtCN,YAAY,CAACI,SAAS,CAAC;EAC3B,CAAC;EAEDG,OAAO,CAACC,GAAG,CAACT,SAAS,CAAC;EAEtB,MAAMU,SAAS,GAAG;IACdC,cAAc,EAAEX,SAAS,GAAG,cAAc,GAAG;EACjD,CAAC;EAED,oBACIP,OAAA,CAAAE,SAAA;IAAAI,QAAA,eAEIN,OAAA;MAAAM,QAAA,gBACIN,OAAA;QAAMmB,KAAK,EAAEF,SAAU;QAAAX,QAAA,EAAEA;MAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5CvB,OAAA,CAACH,KAAK;QAAC2B,KAAK,EAAC,SAAS;QAAAlB,QAAA,gBACnBN,OAAA;UAAOyB,IAAI,EAAC,UAAU;UAACC,IAAI,EAAC,WAAW;UAACC,QAAQ,EAAEjB;QAAmB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxEvB,OAAA,CAACF,KAAK;UAAC8B,SAAS,EAAC,cAAc;UAACC,OAAO,EAAC,QAAQ;UAAAV,KAAK,EAAE;YAAEK,KAAK,EAAE,OAAO;YAAEM,OAAO,EAAE,MAAM;YAACC,QAAQ,EAAE,MAAM;YAAEC,KAAK,EAAE,KAAK;YAAEC,MAAM,EAAE;UAAM,CAAE;UAAA3B,QAAA,gBACrIN,OAAA;YAAI4B,SAAS,EAAC;UAAe;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9BvB,OAAA;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAEhB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC,gBACP,CAAC;AAEX,CAAC;AAAAlB,EAAA,CApCKF,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}